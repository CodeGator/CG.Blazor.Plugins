{
  "api/CG.Blazor.Plugins.BlazorPluginException.html": {
    "href": "api/CG.Blazor.Plugins.BlazorPluginException.html",
    "title": "Class BlazorPluginException",
    "keywords": "Class BlazorPluginException This class represents an Blazor plugin related exception. Inheritance System.Object BlazorPluginException Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public class BlazorPluginException : Exception Constructors BlazorPluginException() This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException() BlazorPluginException(SerializationInfo, StreamingContext) This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. BlazorPluginException(String) This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException(string message) Parameters Type Name Description System.String message The message to use for the exception. BlazorPluginException(String, Exception) This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Blazor.Plugins.BlazorResources.html": {
    "href": "api/CG.Blazor.Plugins.BlazorResources.html",
    "title": "Class BlazorResources",
    "keywords": "Class BlazorResources This class utility contains resources that were dynamically gathered from various plugins at startup. Inheritance System.Object BlazorResources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public static class BlazorResources Properties RoutedAssemblies This property contains a list of Razor Class Library assemblies that require routing support, from Blazor, at runtime. Declaration public static IList<Assembly> RoutedAssemblies { get; } Property Value Type Description IList < Assembly > Methods Clear() This method clears any resources contained by this class utility. Declaration public static void Clear() RenderExternalResources() This method renders any external resource links in the CG.Blazor.Plugins.BlazorResources.ExternalResources collection as a collection of HTML link tags. Declaration public static string RenderExternalResources() Returns Type Description System.String An unencoded HTML snippet. RenderScriptTags() This method renders any scripts in the CG.Blazor.Plugins.BlazorResources.Scripts collection as a collection of HTML script tags. Declaration public static string RenderScriptTags() Returns Type Description System.String An unencoded HTML snippet. RenderStyleSheetLinks() This method renders any style sheets in the CG.Blazor.Plugins.BlazorResources.StyleSheets collection as a collection of HTML link tags. Declaration public static string RenderStyleSheetLinks() Returns Type Description System.String An unencoded HTML snippet."
  },
  "api/CG.Blazor.Plugins.html": {
    "href": "api/CG.Blazor.Plugins.html",
    "title": "Namespace CG.Blazor.Plugins",
    "keywords": "Namespace CG.Blazor.Plugins Classes BlazorPluginException This class represents an Blazor plugin related exception. BlazorResources This class utility contains resources that were dynamically gathered from various plugins at startup. ModuleBase This class is a base implementation of the IModule interface. Interfaces IModule This interface represents a Blazor plugin module."
  },
  "api/CG.Blazor.Plugins.IModule.html": {
    "href": "api/CG.Blazor.Plugins.IModule.html",
    "title": "Interface IModule",
    "keywords": "Interface IModule This interface represents a Blazor plugin module. Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public interface IModule Methods Configure(WebApplication) This method is called by the framework when the module is first loaded, to configure the logic within the plugin Declaration void Configure(WebApplication webApplication) Parameters Type Name Description WebApplication webApplication The web application to use for the operation. ConfigureServices(WebApplicationBuilder, IConfiguration) This method is called by the framework when the module is first loaded, to configure the services within the plugin. Declaration void ConfigureServices(WebApplicationBuilder webApplicationBuilder, IConfiguration configuration) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder The web application to use for the operation. IConfiguration configuration The configuration section to use for the operation. Remarks The configuration parameter is isolated to the current module's configuration settings so that each module can then add whatever configuration settings are required, for that module. So, for instance, if a module requires repository options, the section can be conveniently placed inside the module's configuration section."
  },
  "api/CG.Blazor.Plugins.ModuleBase.html": {
    "href": "api/CG.Blazor.Plugins.ModuleBase.html",
    "title": "Class ModuleBase",
    "keywords": "Class ModuleBase This class is a base implementation of the IModule interface. Inheritance System.Object ModuleBase Implements IModule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public abstract class ModuleBase : IModule Methods Configure(WebApplication) This method is called by the framework when the module is first loaded, to configure the logic within the plugin Declaration public abstract void Configure(WebApplication webApplication) Parameters Type Name Description WebApplication webApplication The web application to use for the operation. ConfigureServices(WebApplicationBuilder, IConfiguration) This method is called by the framework when the module is first loaded, to configure the services within the plugin. Declaration public abstract void ConfigureServices(WebApplicationBuilder webApplicationBuilder, IConfiguration configuration) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder The web application to use for the operation. IConfiguration configuration The configuration section to use for the operation. Remarks The configuration parameter is isolated to the current module's configuration settings so that each module can then add whatever configuration settings are required, for that module. So, for instance, if a module requires repository options, the section can be conveniently placed inside the module's configuration section. Implements IModule"
  },
  "api/CG.Blazor.Plugins.Options.BlazorModuleOptions.html": {
    "href": "api/CG.Blazor.Plugins.Options.BlazorModuleOptions.html",
    "title": "Class BlazorModuleOptions",
    "keywords": "Class BlazorModuleOptions This class represents configuration options for a Blazor plugin module. Inheritance System.Object BlazorModuleOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins.Options Assembly : CG.Blazor.Plugins.dll Syntax public class BlazorModuleOptions Constructors BlazorModuleOptions() This constructor creates a new instance of the BlazorModuleOptions class. Declaration public BlazorModuleOptions() Properties AssemblyNameOrPath This property contains an optional assembly name, or path, for the Blazor plugin assembly that corresponds to the plugin. Declaration public string AssemblyNameOrPath { get; set; } Property Value Type Description System.String EntryPoint This property contains the name of an options entry point for the plugin. Declaration public string EntryPoint { get; set; } Property Value Type Description System.String IsEnabled This property indicates whether the plugin is enabled for loading, or not. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean Routed This property indicates that the plugin requires routing support, from Blazor, at runtime. Declaration public bool Routed { get; set; } Property Value Type Description System.Boolean Scripts This property contains an optional list of scripts, from the plugin, that should be injected into the HTML head section, at runtime. Declaration public IList<string> Scripts { get; set; } Property Value Type Description IList < System.String > StyleSheets This property contains an optional list of resources, from the plugin, that should be injected into the HTML head section, at runtime. Declaration public IList<string> StyleSheets { get; set; } Property Value Type Description IList < System.String >"
  },
  "api/CG.Blazor.Plugins.Options.BlazorPluginsOptions.html": {
    "href": "api/CG.Blazor.Plugins.Options.BlazorPluginsOptions.html",
    "title": "Class BlazorPluginsOptions",
    "keywords": "Class BlazorPluginsOptions This class represents configuration options for Blazor plugins. Inheritance System.Object BlazorPluginsOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins.Options Assembly : CG.Blazor.Plugins.dll Syntax public class BlazorPluginsOptions Constructors BlazorPluginsOptions() This constructor creates a new instance of the BlazorPluginsOptions class. Declaration public BlazorPluginsOptions() Properties Modules This property contains an optional list of plugin modules. Declaration public IList<BlazorModuleOptions> Modules { get; set; } Property Value Type Description IList < BlazorModuleOptions >"
  },
  "api/CG.Blazor.Plugins.Options.html": {
    "href": "api/CG.Blazor.Plugins.Options.html",
    "title": "Namespace CG.Blazor.Plugins.Options",
    "keywords": "Namespace CG.Blazor.Plugins.Options Classes BlazorModuleOptions This class represents configuration options for a Blazor plugin module. BlazorPluginsOptions This class represents configuration options for Blazor plugins."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication"
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html",
    "title": "Class WebApplicationExtensions",
    "keywords": "Class WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication Inheritance System.Object WebApplicationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blazor.Plugins.dll Syntax public static class WebApplicationExtensions Methods UseBlazorPlugins(WebApplication) This method wires up services needed to support Blazor plugins. Declaration public static WebApplication UseBlazorPlugins(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication the value of the webApplication parameter, for chaining method calls together."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes WebApplicationBuilderExtensions This class contains extension methods related to the"
  },
  "api/Microsoft.Extensions.DependencyInjection.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions",
    "keywords": "Class WebApplicationBuilderExtensions This class contains extension methods related to the Inheritance System.Object WebApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Blazor.Plugins.dll Syntax public static class WebApplicationBuilderExtensions Methods AddBlazorPlugins(WebApplicationBuilder, String, Nullable<ILogger>) This method adds plugins to the given web application builder. Declaration public static WebApplicationBuilder AddBlazorPlugins(this WebApplicationBuilder webApplicationBuilder, string configurationSection = \"Plugins\", ILogger? bootstrapLogger = null) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String configurationSection The default configuration section to read options from. System.Nullable < ILogger > bootstrapLogger An optional bootstrap logger to use for the operation. Returns Type Description WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Blazor.Plugins.dll contains server side Blazor plugin extensions used by other CodeGator packages."
  }
}