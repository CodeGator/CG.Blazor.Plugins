{
  "api/CG.Blazor.Plugins.BlazorPluginException.html": {
    "href": "api/CG.Blazor.Plugins.BlazorPluginException.html",
    "title": "Class BlazorPluginException",
    "keywords": "Class BlazorPluginException This class represents an Blazor plugin related exception. Inheritance System.Object System.Exception BlazorPluginException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax [Serializable] public class BlazorPluginException : Exception, ISerializable Constructors BlazorPluginException() This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException() BlazorPluginException(SerializationInfo, StreamingContext) This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. BlazorPluginException(String) This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException(string message) Parameters Type Name Description System.String message The message to use for the exception. BlazorPluginException(String, Exception) This constructor creates a new instance of the BlazorPluginException class. Declaration public BlazorPluginException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Blazor.Plugins.BlazorResources.html": {
    "href": "api/CG.Blazor.Plugins.BlazorResources.html",
    "title": "Class BlazorResources",
    "keywords": "Class BlazorResources This class utility contains resources that were dynamically gathered from various plugins at startup. Inheritance System.Object BlazorResources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public static class BlazorResources Properties RoutedAssemblies This property contains a list of Razor Class Library assemblies that require routing support, from Blazor, at runtime. Declaration public static IList<Assembly> RoutedAssemblies { get; } Property Value Type Description System.Collections.Generic.IList < System.Reflection.Assembly > Methods Clear() This method clears any resources contained by this class utility. Declaration public static void Clear() RenderExternalResources() This method renders any external resource links in the CG.Blazor.Plugins.BlazorResources.ExternalResources collection as a collection of HTML link tags. Declaration public static string RenderExternalResources() Returns Type Description System.String An unencoded HTML snippet. RenderScriptTags() This method renders any scripts in the CG.Blazor.Plugins.BlazorResources.Scripts collection as a collection of HTML script tags. Declaration public static string RenderScriptTags() Returns Type Description System.String An unencoded HTML snippet. RenderStyleSheetLinks() This method renders any style sheets in the CG.Blazor.Plugins.BlazorResources.StyleSheets collection as a collection of HTML link tags. Declaration public static string RenderStyleSheetLinks() Returns Type Description System.String An unencoded HTML snippet."
  },
  "api/CG.Blazor.Plugins.html": {
    "href": "api/CG.Blazor.Plugins.html",
    "title": "Namespace CG.Blazor.Plugins",
    "keywords": "Namespace CG.Blazor.Plugins Classes BlazorPluginException This class represents an Blazor plugin related exception. BlazorResources This class utility contains resources that were dynamically gathered from various plugins at startup. ModuleBase This class is a base implementation of the IModule interface. Interfaces IModule This interface represents a Blazor plugin module."
  },
  "api/CG.Blazor.Plugins.IModule.html": {
    "href": "api/CG.Blazor.Plugins.IModule.html",
    "title": "Interface IModule",
    "keywords": "Interface IModule This interface represents a Blazor plugin module. Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public interface IModule Methods Configure(IApplicationBuilder, IWebHostEnvironment) This method is called by the framework when the module is first loaded, to configure the logic within the plugin Declaration void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment env The environment to use for the operation. ConfigureServices(IServiceCollection, IConfiguration) This method is called by the framework when the module is first loaded, to configure the services within the plugin. Declaration void ConfigureServices(IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Remarks The configuration parameter is isolated to the current module's configuration settings so that each module can then add whatever configuration settings are required, for that module. So, for instance, if a module requires repository options, the section can be conveniently placed inside the module's configuration section."
  },
  "api/CG.Blazor.Plugins.ModuleBase.html": {
    "href": "api/CG.Blazor.Plugins.ModuleBase.html",
    "title": "Class ModuleBase",
    "keywords": "Class ModuleBase This class is a base implementation of the IModule interface. Inheritance System.Object ModuleBase Implements IModule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins Assembly : CG.Blazor.Plugins.dll Syntax public abstract class ModuleBase : IModule Methods Configure(IApplicationBuilder, IWebHostEnvironment) This method is called by the framework when the module is first loaded, to configure the logic within the plugin Declaration public abstract void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment env The environment to use for the operation. ConfigureServices(IServiceCollection, IConfiguration) This method is called by the framework when the module is first loaded, to configure the services within the plugin. Declaration public abstract void ConfigureServices(IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Remarks The configuration parameter is isolated to the current module's configuration settings so that each module can then add whatever configuration settings are required, for that module. So, for instance, if a module requires repository options, the section can be conveniently placed inside the module's configuration section. Implements IModule"
  },
  "api/CG.Blazor.Plugins.Options.BlazorModuleOptions.html": {
    "href": "api/CG.Blazor.Plugins.Options.BlazorModuleOptions.html",
    "title": "Class BlazorModuleOptions",
    "keywords": "Class BlazorModuleOptions This class represents configuration options for a Blazor plugin module. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase BlazorModuleOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins.Options Assembly : CG.Blazor.Plugins.dll Syntax public class BlazorModuleOptions : OptionsBase, IValidatableObject Constructors BlazorModuleOptions() This constructor creates a new intance of the BlazorModuleOptions class. Declaration public BlazorModuleOptions() Properties AssemblyNameOrPath This property contains an optional assembly name, or path, for the Blazor plugin assembly that corresponds to the plugin. Declaration public string AssemblyNameOrPath { get; set; } Property Value Type Description System.String EntryPoint This property contains the name of an options entry point for the plugin. Declaration public string EntryPoint { get; set; } Property Value Type Description System.String IsEnabled This property indicates whether the plugin is enabled for loading, or not. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean Routed This property indicates that the plugin requires routing support, from Blazor, at runtime. Declaration public bool Routed { get; set; } Property Value Type Description System.Boolean Scripts This property contains an optional list of scripts, from the plugin, that should be injected into the HTML head section, at runtime. Declaration public IList<string> Scripts { get; set; } Property Value Type Description System.Collections.Generic.IList < System.String > StyleSheets This property contains an optional list of resources, from the plugin, that should be injected into the HTML head section, at runtime. Declaration public IList<string> StyleSheets { get; set; } Property Value Type Description System.Collections.Generic.IList < System.String > Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Blazor.Plugins.Options.BlazorPluginsOptions.html": {
    "href": "api/CG.Blazor.Plugins.Options.BlazorPluginsOptions.html",
    "title": "Class BlazorPluginsOptions",
    "keywords": "Class BlazorPluginsOptions This class represents configuration options for Blazor plugins. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase BlazorPluginsOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Blazor.Plugins.Options Assembly : CG.Blazor.Plugins.dll Syntax public class BlazorPluginsOptions : OptionsBase, IValidatableObject Constructors BlazorPluginsOptions() This constructor creates a new instance of the BlazorPluginsOptions class. Declaration public BlazorPluginsOptions() Properties Modules This property contains an optional list of plugin modules. Declaration public IList<BlazorModuleOptions> Modules { get; set; } Property Value Type Description System.Collections.Generic.IList < BlazorModuleOptions > Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Blazor.Plugins.Options.html": {
    "href": "api/CG.Blazor.Plugins.Options.html",
    "title": "Namespace CG.Blazor.Plugins.Options",
    "keywords": "Namespace CG.Blazor.Plugins.Options Classes BlazorModuleOptions This class represents configuration options for a Blazor plugin module. BlazorPluginsOptions This class represents configuration options for Blazor plugins."
  },
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Blazor.Plugins.dll Syntax public static class ApplicationBuilderExtensions Methods UseBlazorPlugins(IApplicationBuilder, IWebHostEnvironment) This method wires up services needed to support Blazor plugins. Declaration public static IApplicationBuilder UseBlazorPlugins(this IApplicationBuilder applicationBuilder, IWebHostEnvironment webHostEnvironment) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment webHostEnvironment The hosting environment to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder the value of the applicationBuilder parameter, for chaining method calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments is missing, or invalid. BlazorPluginException This exception is thrown whenever the operation fails."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Blazor.Plugins.dll Syntax public static class ServiceCollectionExtensions Methods AddBlazorPlugins(IServiceCollection, IDataProtector, IConfiguration) This method adds any configured plugins to the specified service collection. It also registers any resources from the plugins, with Blazor. It also makes the Blazor router aware of any components or pages that require runtime routing support. Declaration public static IServiceCollection AddBlazorPlugins(this IServiceCollection serviceCollection, IDataProtector dataProtector, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.AspNetCore.DataProtection.IDataProtector dataProtector The data protector to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Remarks In the interest of flexibility, this method no longer attempts to locate a specific section in the configuration. That way, the section for plugins can be named anything and be located anywhere. But, everything comes at a cost and for this, the cost is, the developer has to ensure that the configuration object is pointed to whatever section you're using, for Blazor plugins. If you don't do that, it won't work, plain and simple. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments is missing, or invalid. BlazorPluginException This exception is thrown whenever the operation fails. AddBlazorPlugins(IServiceCollection, IConfiguration) This method adds any configured plugins to the specified service collection. It also registers any resources from the plugins, with Blazor. It also makes the Blazor router aware of any components or pages that require runtime routing support. Declaration public static IServiceCollection AddBlazorPlugins(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Remarks In the interest of flexibility, this method no longer attempts to locate a specific section in the configuration. That way, the section for plugins can be named anything and be located anywhere. But, everything comes at a cost and for this, the cost is, the developer has to ensure that the configuration object is pointed to whatever section you're using, for Blazor plugins. If you don't do that, it won't work, plain and simple. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments is missing, or invalid. BlazorPluginException This exception is thrown whenever the operation fails."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Blazor.Plugins.dll contains server side Blazor plugin extensions used by other CodeGator packages."
  }
}